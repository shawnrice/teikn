name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  # Tests on multiple versions of node
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ['13', '12', '10', '8']
    name: Test (Node ${{ matrix.node }})
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node modules
        id: cache-deps
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-${{ matrix.node }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies (from network)
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: |
          yarn policies set-version
          yarn install --frozen-lockfile --ignore-optional

      - name: Install Dependencies (from cache)
        if: steps.cache-deps.outputs.cache-hit == 'true'
        run: |
          yarn policies set-version
          yarn install --frozen-lockfile --ignore-optional --offline

      - name: Test
        run: yarn test --ci

  # Runs ESlint
  lint:
    runs-on: ubuntu-latest
    name: Lint
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node modules
        id: cache-deps
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Eslint
        run: yarn lint

  # Uploads coverage to CodeCov
  coverage:
    runs-on: ubuntu-latest
    name: Coverage
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node modules
        id: cache-deps
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Test
        run: yarn test --ci

      - name: Codecov
        uses: codecov/codecov-action@v1.0.4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
